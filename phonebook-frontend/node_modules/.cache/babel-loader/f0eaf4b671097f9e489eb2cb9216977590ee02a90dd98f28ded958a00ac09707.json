{"ast":null,"code":"var _jsxFileName = \"D:\\\\PhoneBook\\\\phonebook-frontend\\\\src\\\\pages\\\\PhoneList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport PhoneCard from '../components/PhoneCard';\nimport { isAdminLoggedIn, logoutAdmin } from '../utils/auth';\nimport { toast } from 'react-toastify';\nimport Navbar from '../components/Navbar'; // Import Navbar mới\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PhoneList() {\n  _s();\n  const [phones, setPhones] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [selectedDept, setSelectedDept] = useState('');\n  const [keyword, setKeyword] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [editingPhone, setEditingPhone] = useState(null); // Dùng để quản lý việc sửa\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPhones();\n    fetchDepartments();\n    setIsAdmin(isAdminLoggedIn()); // kiểm tra login mỗi lần load\n  }, []);\n  const fetchPhones = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/phones');\n      setPhones(res.data);\n    } catch (err) {\n      console.error('Lỗi fetch phones', err);\n    }\n  };\n  const fetchDepartments = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/departments');\n      setDepartments(res.data);\n    } catch (err) {\n      console.error('Lỗi fetch departments', err);\n    }\n  };\n  const handleSearch = async e => {\n    e.preventDefault();\n    const query = `http://localhost:5000/api/phones/search?keyword=${keyword}&department=${selectedDept}`;\n    const res = await axios.get(query);\n    setPhones(res.data);\n  };\n  const handleDeptChange = async e => {\n    const dept = e.target.value;\n    setSelectedDept(dept);\n    const query = `http://localhost:5000/api/phones/search?keyword=${keyword}&department=${dept}`;\n    const res = await axios.get(query);\n    setPhones(res.data);\n  };\n  const handleEdit = phone => {\n    setEditingPhone(phone);\n    // Điều hướng đến trang sửa (có thể là Modal hoặc trang riêng)\n    navigate(`/edit-phone/${phone.id}`);\n  };\n  const handleUpdate = e => {\n    e.preventDefault();\n    const {\n      phone_number,\n      location,\n      department_name\n    } = editingPhone;\n    axios.put(`http://localhost:5000/api/phones/${editingPhone.id}`, {\n      phone_number,\n      location,\n      department_name\n    }).then(response => {\n      // Cập nhật lại danh sách sau khi sửa\n      setPhones(phones.map(phone => phone.id === editingPhone.id ? {\n        ...phone,\n        phone_number,\n        location,\n        department_name\n      } : phone));\n      alert('Cập nhật thành công');\n      setEditingPhone(null); // Đóng form chỉnh sửa\n    }).catch(error => console.error(error));\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Bạn chắc chắn muốn xóa số điện thoại này?')) {\n      try {\n        const res = await axios.delete(`http://localhost:5000/api/phones/${id}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        toast.success('Xóa số điện thoại thành công!');\n        fetchPhones(); // Refresh lại danh sách\n      } catch (err) {\n        toast.error('Xóa số điện thoại thất bại!');\n        console.error('Lỗi xóa phone', err);\n      }\n    }\n  };\n  const handleLogout = () => {\n    toast.success('Đăng xuất thành công!');\n    logoutAdmin(); // Xử lý đăng xuất và chuyển hướng về trang login\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      departments: departments,\n      keyword: keyword,\n      setKeyword: setKeyword,\n      selectedDept: selectedDept,\n      setSelectedDept: setSelectedDept,\n      isAdmin: isAdmin,\n      handleSearch: handleSearch,\n      handleDeptChange: handleDeptChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5 mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: phones.map(phone => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(PhoneCard, {\n            phone: phone,\n            isAdmin: isAdmin,\n            onEdit: () => handleEdit(phone),\n            onDelete: () => handleDelete(phone.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, phone.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PhoneList, \"3XO2Zjsu3DTqVa7ZJsWlj3Jqo4c=\", false, function () {\n  return [useNavigate];\n});\n_c = PhoneList;\nexport default PhoneList;\nvar _c;\n$RefreshReg$(_c, \"PhoneList\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","PhoneCard","isAdminLoggedIn","logoutAdmin","toast","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","PhoneList","_s","phones","setPhones","departments","setDepartments","selectedDept","setSelectedDept","keyword","setKeyword","isAdmin","setIsAdmin","editingPhone","setEditingPhone","navigate","fetchPhones","fetchDepartments","res","get","data","err","console","error","handleSearch","e","preventDefault","query","handleDeptChange","dept","target","value","handleEdit","phone","id","handleUpdate","phone_number","location","department_name","put","then","response","map","alert","catch","handleDelete","window","confirm","delete","headers","Authorization","localStorage","getItem","success","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onEdit","onDelete","_c","$RefreshReg$"],"sources":["D:/PhoneBook/phonebook-frontend/src/pages/PhoneList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport PhoneCard from '../components/PhoneCard';\r\nimport { isAdminLoggedIn, logoutAdmin } from '../utils/auth';\r\nimport { toast } from 'react-toastify';\r\nimport Navbar from '../components/Navbar'; // Import Navbar mới\r\n\r\nfunction PhoneList() {\r\n  const [phones, setPhones] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [selectedDept, setSelectedDept] = useState('');\r\n  const [keyword, setKeyword] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [editingPhone, setEditingPhone] = useState(null); // Dùng để quản lý việc sửa\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchPhones();\r\n    fetchDepartments();\r\n    setIsAdmin(isAdminLoggedIn()); // kiểm tra login mỗi lần load\r\n  }, []);\r\n\r\n  const fetchPhones = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/phones');\r\n      setPhones(res.data);\r\n    } catch (err) {\r\n      console.error('Lỗi fetch phones', err);\r\n    }\r\n  };\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/departments');\r\n      setDepartments(res.data);\r\n    } catch (err) {\r\n      console.error('Lỗi fetch departments', err);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    const query = `http://localhost:5000/api/phones/search?keyword=${keyword}&department=${selectedDept}`;\r\n    const res = await axios.get(query);\r\n    setPhones(res.data);\r\n  };\r\n\r\n  const handleDeptChange = async (e) => {\r\n    const dept = e.target.value;\r\n    setSelectedDept(dept);\r\n\r\n    const query = `http://localhost:5000/api/phones/search?keyword=${keyword}&department=${dept}`;\r\n    const res = await axios.get(query);\r\n    setPhones(res.data);\r\n  };\r\n\r\n  const handleEdit = (phone) => {\r\n    setEditingPhone(phone);\r\n    // Điều hướng đến trang sửa (có thể là Modal hoặc trang riêng)\r\n    navigate(`/edit-phone/${phone.id}`);\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    const { phone_number, location, department_name } = editingPhone;\r\n\r\n    axios.put(`http://localhost:5000/api/phones/${editingPhone.id}`, {\r\n      phone_number,\r\n      location,\r\n      department_name\r\n    })\r\n      .then(response => {\r\n        // Cập nhật lại danh sách sau khi sửa\r\n        setPhones(phones.map(phone =>\r\n          phone.id === editingPhone.id ? { ...phone, phone_number, location, department_name } : phone\r\n        ));\r\n        alert('Cập nhật thành công');\r\n        setEditingPhone(null); // Đóng form chỉnh sửa\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Bạn chắc chắn muốn xóa số điện thoại này?')) {\r\n      try {\r\n        const res = await axios.delete(`http://localhost:5000/api/phones/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        toast.success('Xóa số điện thoại thành công!');\r\n        fetchPhones(); // Refresh lại danh sách\r\n      } catch (err) {\r\n        toast.error('Xóa số điện thoại thất bại!');\r\n        console.error('Lỗi xóa phone', err);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleLogout = () => {\r\n    toast.success('Đăng xuất thành công!');\r\n    logoutAdmin(); // Xử lý đăng xuất và chuyển hướng về trang login\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Navbar dùng component mới */}\r\n      <Navbar\r\n        departments={departments}\r\n        keyword={keyword}\r\n        setKeyword={setKeyword}\r\n        selectedDept={selectedDept}\r\n        setSelectedDept={setSelectedDept}\r\n        isAdmin={isAdmin}\r\n        handleSearch={handleSearch}\r\n        handleDeptChange={handleDeptChange}\r\n      />\r\n      {/* Nội dung */}\r\n      <div className=\"container py-5 mt-4\">\r\n        <div className=\"row\">\r\n          {phones.map((phone) => (\r\n            <div key={phone.id} className=\"col-md-3 mb-3\">\r\n              <PhoneCard\r\n                phone={phone}\r\n                isAdmin={isAdmin}\r\n                onEdit={() => handleEdit(phone)}\r\n                onDelete={() => handleDelete(phone.id)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PhoneList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}